"use strict";(()=>{var e={};e.id=487,e.ids=[487],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2048:e=>{e.exports=require("fs")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},5315:e=>{e.exports=require("path")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},7360:e=>{e.exports=require("url")},1764:e=>{e.exports=require("util")},8026:e=>{e.exports=require("worker_threads")},1568:e=>{e.exports=require("zlib")},7561:e=>{e.exports=require("node:fs")},4492:e=>{e.exports=require("node:stream")},2477:e=>{e.exports=require("node:stream/web")},6852:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>N,patchFetch:()=>b,requestAsyncStorage:()=>P,routeModule:()=>q,serverHooks:()=>k,staticGenerationAsyncStorage:()=>A});var a={};r.r(a),r.d(a,{POST:()=>g,runtime:()=>w});var n=r(9303),s=r(8716),i=r(670),o=r(7070),p=r(4214),u=r(7561),c=r.n(u);let l=require("node:path");var m=r.n(l);let d=require("node:os");var x=r.n(d);let w="nodejs";async function y(e){let t=await e.arrayBuffer(),r=Buffer.from(t),a=m().join(x().tmpdir(),`${Date.now()}-${e.name}`);return await c().promises.writeFile(a,r),a}async function f(e){let t=c().createReadStream(e),r=new p.Pp({apiKey:process.env.OPENAI_API_KEY}),a=await r.audio.transcriptions.create({file:t,model:"gpt-4o-mini-transcribe"});return(a.text??a?.results?.[0]?.alternatives?.[0]?.transcript??"").trim()}async function h(e){let t=`You are a diarization assistant. Given a transcript with no speaker labels, segment it into up to 2 speakers.
Return a JSON array of objects with keys: speaker (1 or 2) and text (concise contiguous utterances). Keep order. Merge short interjections.
Transcript:
${e}`,r=new p.Pp({apiKey:process.env.OPENAI_API_KEY}),a=await r.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"system",content:"Return only valid JSON."},{role:"user",content:t}],temperature:.2}),n=a.choices[0]?.message?.content??"[]";try{let e=JSON.parse(n);return(Array.isArray(e)?e.map(e=>({speaker:2===Number(e.speaker)?2:1,text:String(e.text??"").trim()})):[]).filter(e=>e.text.length>0)}catch{return[]}}async function v(e){let t=new p.Pp({apiKey:process.env.OPENAI_API_KEY}),r=await t.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"system",content:"Summarize concisely in 5-7 bullet points."},{role:"user",content:e}],temperature:.3});return r.choices[0]?.message?.content??""}async function g(e){let t=(await e.formData()).get("audio");if(!(t instanceof File))return new o.NextResponse("No audio provided",{status:400});let r=await y(t);try{let e=await f(r),t=await h(e),a=await v(e);return o.NextResponse.json({transcript:e,diarization:t,summary:a})}finally{c().promises.unlink(r).catch(()=>{})}}let q=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/conversation/route",pathname:"/api/conversation",filename:"route",bundlePath:"app/api/conversation/route"},resolvedPagePath:"C:\\Users\\Vigneswar\\Downloads\\New folder (2)\\ai-playground\\src\\app\\api\\conversation\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:P,staticGenerationAsyncStorage:A,serverHooks:k}=q,N="/api/conversation/route";function b(){return(0,i.patchFetch)({serverHooks:k,staticGenerationAsyncStorage:A})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972,214],()=>r(6852));module.exports=a})();